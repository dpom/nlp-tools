{

 :nlptools.tool/entity {:model #ig/ref :nlptools.model/entity
                        :logger #ig/ref :duct.logger/timbre
                        :tokenizer #ig/ref :nlptools.model.tokenizer/simple}

 :nlptools.model/entity {:loadbin? true
                         :binfile "test/category.bin"
                         :logger #ig/ref :duct.logger/timbre}

 ;; :nlptools.tool/stemmer {:language "ro"
 ;;                          :logger   #ig/ref :duct.logger/timbre}

 ;; :nlptools.tool/stopwords {:tokenizer #ig/ref :nlptools.model.tokenizer/simple
 ;;                           :logger #ig/ref :duct.logger/timbre}

 :nlptools.tool/classification {:tokenizer #ig/ref :nlptools.model.tokenizer/simple
                                :model #ig/ref :nlptools.model/classification
                                :logger #ig/ref :duct.logger/timbre}

 :nlptools.model.tokenizer/simple {:logger #ig/ref :duct.logger/timbre}

 :nlptools.model/classification {:binfile "test/ema.bin"
                                 :loadbin? true
                                 :language "ro"
                                 :trainfile "test/ema.train"
                                 :logger #ig/ref :duct.logger/timbre}

 :duct.logger/timbre {:level    :debug
                      :set-root-config? true
                      :appenders {:duct.logger.timbre/spit #ig/ref :duct.logger.timbre/spit,
                                  :duct.logger.timbre/brief #ig/ref :duct.logger.timbre/brief}},


 :duct.logger.timbre/println {}
 :duct.logger.timbre/brief {:min-level :report},
 :duct.logger.timbre/spit {:fname "logs/dev.log" :min-level :debug}

 }
